#include "BST.h"

#include "AVL.h"

using namespace std;

// ПЛАН!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// 1. Реализовать бинарное дерево поиска, красно-черное дерево и АВЛ дерево
//(структура, балансировка, операции вставки/удаления/поиска).

// 2. Получить зависимость высоты дерева поиска от количества ключей, при условии,
// что значение ключа - случайная величина, распределенная равномерно.
// Какая асимпотика функции h(n) наблюдается у двоичного дерева поиска?

// 3. Получить зависимость АВЛ и красно-черного дерева поиска от количества ключей, при условии,
// что значения ключей монотонно возрастают.

// 3. Вывести полученные результаты на графики
// 4. Сравнить с теоретической оценкой высоты.

// 5. Реализовать обходы в глубину и обход в ширину двоичного дерева с выводом результата.

int main(int argc, char *argv[])
{
    AVLNode *root = new AVLNode(50);
    AVLinsert(root, 25);
    AVLinsert(root, 75);
    AVLinsert(root, 100);
    AVLinsert(root, 30);
    AVLinsert(root, 1);
    inOrder_print(root);
    root = AVLdelete(root, 50);
    std::cout << std::endl;
    inOrder_print(root);
    
}